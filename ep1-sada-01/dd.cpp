#include <bits/stdc++.h>

using namespace std;
#define int intmax_t
#define rep(i, a, b) for(int i = (a); i < (b); ++i)
#define trav(a, x) for(auto& a : x)
#define all(x) begin(x), end(x)
#define sz(x) (int)(x).size()
#define pb push_back
#define fst first
#define snd second
typedef long long ll;
typedef long double ld;
typedef pair<ll, ll> pii;
typedef vector<ll> vi;
typedef vector<vi> vvi;
typedef vector<pii> vii;
char digits[10][7][5] = {
        {
                {'+', '-', '-', '-', '+'},
                {'|', ' ', ' ', ' ', '|',},
                {'|', ' ', ' ', ' ', '|',},
                {'+', ' ', ' ', ' ', '+',},
                {'|', ' ', ' ', ' ', '|',},
                {'|', ' ', ' ', ' ', '|',},
                {'+', '-', '-', '-', '+'}
        },
        {
                {' ', ' ', ' ', ' ', '+'},
                {' ', ' ', ' ', ' ', '|',},
                {' ', ' ', ' ', ' ', '|',},
                {' ', ' ', ' ', ' ', '+',},
                {' ', ' ', ' ', ' ', '|',},
                {' ', ' ', ' ', ' ', '|',},
                {' ', ' ', ' ', ' ', '+'}
        },
        {
                {'+', '-', '-', '-', '+'},
                {' ', ' ', ' ', ' ', '|',},
                {' ', ' ', ' ', ' ', '|',},
                {'+', '-', '-', '-', '+',},
                {'|', ' ', ' ', ' ', ' ',},
                {'|', ' ', ' ', ' ', ' ',},
                {'+', '-', '-', '-', '+'}
        },
        {

                {'+', '-', '-', '-', '+'},
                {' ', ' ', ' ', ' ', '|',},
                {' ', ' ', ' ', ' ', '|',},
                {'+', '-', '-', '-', '+',},
                {' ', ' ', ' ', ' ', '|',},
                {' ', ' ', ' ', ' ', '|',},
                {'+', '-', '-', '-', '+'}
        },
        {
                {'+', ' ', ' ', ' ', '+'},
                {'|', ' ', ' ', ' ', '|',},
                {'|', ' ', ' ', ' ', '|',},
                {'+', '-', '-', '-', '+',},
                {' ', ' ', ' ', ' ', '|',},
                {' ', ' ', ' ', ' ', '|',},
                {' ', ' ', ' ', ' ', '+'}
        },
        {
                {'+', '-', '-', '-', '+'},
                {'|', ' ', ' ', ' ', ' ',},
                {'|', ' ', ' ', ' ', ' ',},
                {'+', '-', '-', '-', '+',},
                {' ', ' ', ' ', ' ', '|',},
                {' ', ' ', ' ', ' ', '|',},
                {'+', '-', '-', '-', '+'}
        },
        {
                {'+', '-', '-', '-', '+'},
                {'|', ' ', ' ', ' ', ' ',},
                {'|', ' ', ' ', ' ', ' ',},
                {'+', '-', '-', '-', '+',},
                {'|', ' ', ' ', ' ', '|',},
                {'|', ' ', ' ', ' ', '|',},
                {'+', '-', '-', '-', '+'}
        },
        {

                {'+', '-', '-', '-', '+'},
                {' ', ' ', ' ', ' ', '|',},
                {' ', ' ', ' ', ' ', '|',},
                {' ', ' ', ' ', ' ', '+',},
                {' ', ' ', ' ', ' ', '|',},
                {' ', ' ', ' ', ' ', '|',},
                {' ', ' ', ' ', ' ', '+'}
        },
        {

                {'+', '-', '-', '-', '+'},
                {'|', ' ', ' ', ' ', '|',},
                {'|', ' ', ' ', ' ', '|',},
                {'+', '-', '-', '-', '+',},
                {'|', ' ', ' ', ' ', '|',},
                {'|', ' ', ' ', ' ', '|',},
                {'+', '-', '-', '-', '+'}
        },
        {
                {'+', '-', '-', '-', '+'},
                {'|', ' ', ' ', ' ', '|',},
                {'|', ' ', ' ', ' ', '|',},
                {'+', '-', '-', '-', '+',},
                {' ', ' ', ' ', ' ', '|',},
                {' ', ' ', ' ', ' ', '|',},
                {'+', '-', '-', '-', '+'}
        }
};

void solve() {
    while (true) {
        string time;
        cin >> time;
        if (time == "end") break;
        vector<int> digits_in_time;
        for (const auto item: time) {
            if (item == ':') continue;
            digits_in_time.push_back(item-'0');
        }
        for (int i = 0; i < 7; ++i) {
            for (int j = 0; j < 29; ++j) {
                if (j == 14 && (i == 2 || i == 4)) {
                    cout << "o";
                }
                else if (j <= 4) {
                    cout << digits[digits_in_time[0]][i][j];
                }
                else if (j > 6 && j < 12) {
                    cout << digits[digits_in_time[1]][i][j-7];
                }
                else if (j > 16 && j < 22) {
                    cout << digits[digits_in_time[2]][i][j-17];
                }
                else if (j > 23) {
                    cout << digits[digits_in_time[3]][i][j-24];
                } else {
                    cout << " ";
                }
            }
            cout << "\n";
        }
        cout << endl << endl;
    }
    cout << "end" << endl;
}

signed main() {
    std::istream::sync_with_stdio(false);
    cin.tie(nullptr);
    cin.exceptions(std::istream::failbit);

    int t = 1;
    //cin >> t;
    for (int i = 0; i < t; ++i) {
        solve();
    }
    return 0;
}


